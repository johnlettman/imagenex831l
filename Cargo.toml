[package]
name = "imagenex831l"
version = { workspace = true }
keywords = { workspace = true }
edition = { workspace = true }

[workspace]
resolver = "2"
members = [ "cli" ]

[workspace.package]
version = "0.1.0"
edition = "2021"
keywords = ["imagenex", "pipe", "sonar", "inspection"]
license = "MIT"
repository = "https://github.com/johnlettman/imagenex831l"

[lib]
name = "imagenex831l"
crate-type = ["cdylib", "rlib"]

[features]
nightly = ["dep:backtrace", "binrw/verbose-backtrace"]
pyo3 = ["dep:pyo3", "dep:pyo3-file", "dep:pyo3-log"]
serde = ["dep:serde", "chrono/serde"]
syslog = ["dep:slog-syslog"]
termlog = ["dep:slog-term"]
journald = [] # reserved for Linux

[dev-dependencies]
test-log = "0.2"
assert_matches = "1.5"
env_logger = { version = "0.11", features = ["default"] }

[dependencies]
binrw = { version = "0.15" }
modular-bitfield = "0.11"
serde = { version = "1.0", optional = true }
clap = { version = "4.5.37", features = ["derive"] }
log = { version = "0.4" }
chrono = { version = "0.4" }
thiserror = "2.0"
const_format = "0.2"
num-derive = "0.4"
derive-new = "0.7"
num-traits = "0.2"
memmap2 = "0.9"
git-version = "0.3"
project-root = "0.2"
pyo3 = { version = "0.24", features = ["extension-module", "chrono"], optional = true }
pyo3-file = { version = "0.12", optional = true }
pyo3-log = { version = "0.12.3", optional = true }
backtrace = { version = "0.3.75", optional = true }
slog = "2.7.0"
slog-scope = "4.4.0"
slog-stdlog = "4.1.1"
slog-async = "2.8.0"
slog-syslog = { version = "0.13.0", optional = true }
slog-term = { version = "2.9.1", optional = true }
once_cell = "1.21.3"

[target.'cfg(target_os = "linux")'.features]
journald = ["dep:slog-journald"]

[target.'cfg(target_os = "linux")'.dependencies]
slog-journald = { version = "2.2.0", optional = true }

[target.'cfg(any(target_arch = "wasm32", target_arch = "wasm64"))'.features]
default = ["serde"]

[target.'cfg(any(target_arch = "wasm32", target_arch = "wasm64"))'.dependencies]
wasm-bindgen = "0.2"
tsify = "0.5"
chrono = { version = "0.4", features = ["serde"] }
serde = { version = "1.0", optional = false }
serde-wasm-bindgen = "0.6"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

[target.'cfg(any(target_arch = "wasm32", target_arch = "wasm64"))'.dev-dependencies]
wasm-bindgen-test = "0.3.50"
