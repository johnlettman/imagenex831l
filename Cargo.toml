[package]
name = "imagenex831"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "lib"]

[profile.release]
lto = true

[package.metadata.wasm-pack.profile.dev.wasm-bindgen]
debug-js-glue = true
demangle-name-section = true
dwarf-debug-info = true


[dependencies]
binrw = { version = "0.14" }
modular-bitfield = "0.11"
serde = { version = "1.0", optional = true }
clap = { version = "4.5.18", features = ["derive"] }
log = { version = "0.4" }
chrono = { version = "0.4" }
thiserror = "1.0"
const_format = "0.2"
num-derive = "0.4"
derive-new = "0.7"
num-traits = "0.2"
memmap2 = "0.9"
git-version = "0.3"
project-root = "0.2"
pyo3 = { version = "0.22", optional = true }

[dev-dependencies]
test-log = "0.2"
assert_matches = "1.5"
env_logger = { version = "0.11", features = ["default"] }

[target.'cfg(any(target_arch = "wasm32", target_arch = "wasm64"))'.dependencies]
wasm-bindgen = "0.2"
tsify = "0.4"
serde = { version = "1.0" }
serde-wasm-bindgen = "0.6"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

[target.'cfg(any(target_arch = "wasm32", target_arch = "wasm64"))'.dev-dependencies]
wasm-bindgen-test = "0.3.43"
